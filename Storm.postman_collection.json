{
	"info": {
		"_postman_id": "24ce4211-206a-4acd-935c-b95e384ff0da",
		"name": "Storm测试用例集",
		"description": "Storm项目",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "storm-001",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应等于预期值\r",
							"pm.test(\"Body is correct\",function(){\r",
							"    pm.response.to.have.body({\r",
							"    \"code\": 200,\r",
							"    \"id\": \"1\",\r",
							"    \"name\": \"小明\",\r",
							"    \"age\": 18\r",
							"})\r",
							"})\r",
							"//判断响应体code = 200\r",
							"pm.test(\"Response code is 200\",function(){\r",
							"    var jsonData  = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getuser?userid=1",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					],
					"query": [
						{
							"key": "userid",
							"value": "1"
						}
					]
				},
				"description": "GET请求——获取用户信息成功"
			},
			"response": [
				{
					"name": "storm-001-res",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/getuser?userid=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"getuser"
							],
							"query": [
								{
									"key": "userid",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "TornadoServer/6.1"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Mon, 04 Jan 2021 05:30:07 GMT"
						},
						{
							"key": "Etag",
							"value": "\"5dcd66fa57acb112f4bc67bf532fd6be52cc7275\""
						},
						{
							"key": "Content-Length",
							"value": "59"
						}
					],
					"cookie": [],
					"body": "{\n    \"code\": 200,\n    \"id\": \"1\",\n    \"name\": \"小明\",\n    \"age\": 18\n}"
				}
			]
		},
		{
			"name": "storm-002",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应的msg\r",
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getuser?userid=2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					],
					"query": [
						{
							"key": "userid",
							"value": "2"
						}
					]
				},
				"description": "GET请求——获取不存在的用户信息"
			},
			"response": [
				{
					"name": "storm-002-res",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/getuser?userid=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"getuser"
							],
							"query": [
								{
									"key": "userid",
									"value": "2"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "TornadoServer/6.1"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Date",
							"value": "Mon, 04 Jan 2021 05:34:10 GMT"
						},
						{
							"key": "Etag",
							"value": "\"28ab285fc372e1ff7a7af0bfecc1aefcab6cd4a2\""
						},
						{
							"key": "Content-Length",
							"value": "60"
						}
					],
					"cookie": [],
					"body": "{\n    \"code\": 500,\n    \"msg\": \"没有这个用户\"\n}"
				}
			]
		},
		{
			"name": "storm-003",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应msg\r",
							"pm.test(\"Response msg is '没有这个用户'\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getuser",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					]
				},
				"description": "不传递参数，接口响应提示“没有这个用户”"
			},
			"response": []
		},
		{
			"name": "storm-004",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应msg\r",
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getuser?userid=-1",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					],
					"query": [
						{
							"key": "userid",
							"value": "-1"
						}
					]
				},
				"description": "GET请求-传递参数为负数\r\n响应msg:\"没有这个用户\""
			},
			"response": []
		},
		{
			"name": "storm-005",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应msg\r",
							"pm.test(\"Response msg is 非法用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"非法用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getuser?userid=admin",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					],
					"query": [
						{
							"key": "userid",
							"value": "admin"
						}
					]
				},
				"description": "Get请求-传递参数为非法字符\r\n响应msg:非法用户"
			},
			"response": []
		},
		{
			"name": "storm-006",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应等于预期值\r",
							"pm.test(\"Body is correct\",function(){\r",
							"    pm.response.to.have.body({\r",
							"    \"code\": 200,\r",
							"    \"id\": \"1\",\r",
							"    \"name\": \"小明\",\r",
							"    \"age\": 18\r",
							"})\r",
							"})\r",
							"//判断响应体code = 200\r",
							"pm.test(\"Response code is 200\",function(){\r",
							"    var jsonData  = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{domain}}/getuser",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					]
				},
				"description": "POST请求-获取用户信息成功\r\ncode:200"
			},
			"response": []
		},
		{
			"name": "storm-007",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应的msg\r",
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{domain}}/getuser",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					]
				},
				"description": "POST请求-传递参数userid为不存在ID\r\nmsg:没有这个用户"
			},
			"response": []
		},
		{
			"name": "storm-008",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应msg\r",
							"pm.test(\"Response msg is '没有这个用户'\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getuser",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					]
				},
				"description": "POST请求-不传递参数\r\nmsg:没有这个用户"
			},
			"response": []
		},
		{
			"name": "storm-009",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应msg\r",
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "-1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{domain}}/getuser",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					]
				},
				"description": "POST请求-userid = -1传递非法参数\r\nmsg:没有这个用户"
			},
			"response": []
		},
		{
			"name": "storm-010",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应msg\r",
							"pm.test(\"Response msg is 非法用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"非法用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "admin",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{domain}}/getuser",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					]
				},
				"description": "POST请求-userid=admin 非法传递参数\r\nmsg:非法用户"
			},
			"response": []
		},
		{
			"name": "storm-011",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应的msg\r",
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "10000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{domain}}/getuser",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser"
					]
				},
				"description": "POST请求-一个较大的值userid = 10000\r\nmsg:没有这个用户"
			},
			"response": []
		},
		{
			"name": "storm-012",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应等于预期值\r",
							"pm.test(\"Body is correct\",function(){\r",
							"    pm.response.to.have.body({\r",
							"    \"code\": 200,\r",
							"    \"id\": \"1\",\r",
							"    \"name\": \"小明\",\r",
							"    \"age\": 18\r",
							"})\r",
							"})\r",
							"//判断响应体code = 200\r",
							"pm.test(\"Response code is 200\",function(){\r",
							"    var jsonData  = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{domain}}/getuser2?userid=1",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1"
						}
					]
				},
				"description": "GET请求-成功获取用户信息\r\n添加Header:Content-Type"
			},
			"response": []
		},
		{
			"name": "storm-013",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应的msg\r",
							"pm.test(\"Response msg is 请设置Content-Type为application/json\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"请设置Content-Type为application/json\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getuser2?userid=1",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1"
						}
					]
				},
				"description": "GET请求-不传Header\r\nuserid = 1\r\nmsg:请设置Content-Type为application/json"
			},
			"response": []
		},
		{
			"name": "storm-014",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应的msg\r",
							"pm.test(\"Response msg is 请设置Content-Type为application/json\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"请设置Content-Type为application/json\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json123",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{domain}}/getuser2?userid=1",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1"
						}
					]
				},
				"description": "GET请求-Header传递错误\r\n添加Header:Content-Type123"
			},
			"response": []
		},
		{
			"name": "storm-015",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应的msg\r",
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{domain}}/getuser2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser2"
					]
				},
				"description": "GET请求-不传userid\r\nmsg:没有这个用户"
			},
			"response": []
		},
		{
			"name": "storm-016",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应的msg\r",
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{domain}}/getuser2?userid=2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getuser2"
					],
					"query": [
						{
							"key": "userid",
							"value": "2"
						}
					]
				},
				"description": "GET请求-userid不存在\r\nmsg:没有这个用户"
			},
			"response": []
		},
		{
			"name": "storm-017",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code is 200\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"userid\":1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/getmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getmoney"
					]
				},
				"description": "POST请求-成功获取用户余额 传入参数为JSON格式 userid = 1"
			},
			"response": []
		},
		{
			"name": "storm-018",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is 参数错误\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"参数错误\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/getmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getmoney"
					]
				},
				"description": "POST请求-\r\n传入参数为非JSON格式\r\nuserid = 1"
			},
			"response": []
		},
		{
			"name": "storm-019",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userid\":2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/getmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getmoney"
					]
				},
				"description": "POST请求-\r\n传入参数错误\r\nuserid = 2"
			},
			"response": []
		},
		{
			"name": "storm-020",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is 参数错误\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"参数错误\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getmoney"
					]
				},
				"description": "POST请求-\r\n无传入参数"
			},
			"response": []
		},
		{
			"name": "storm-021",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userid\":\"admin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/getmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getmoney"
					]
				},
				"description": "POST请求-\r\n入参非法"
			},
			"response": []
		},
		{
			"name": "storm-022",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response Status is 405\",function(){\r",
							"    pm.response.to.have.status(405)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/getmoney?userid=1",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"getmoney"
					],
					"query": [
						{
							"key": "userid",
							"value": "1"
						}
					]
				},
				"description": "GET请求-无法获取用户余额\r\nStatus code = 405"
			},
			"response": []
		},
		{
			"name": "storm-023",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response Status is 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "200",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney"
					],
					"query": [
						{
							"key": "userid",
							"value": "1",
							"disabled": true
						}
					]
				},
				"description": "POST请求-成功修改用户余额"
			},
			"response": []
		},
		{
			"name": "storm-024",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"需要认证\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "200",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney"
					]
				},
				"description": "POST请求-无HTTP权限验证"
			},
			"response": []
		},
		{
			"name": "storm-025",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is 认证失败\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"认证失败\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "12345",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "200",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney"
					]
				},
				"description": "POST请求-有HTTP权限验证，但密码错误"
			},
			"response": []
		},
		{
			"name": "storm-026",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "2",
							"type": "text"
						},
						{
							"key": "money",
							"value": "200",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney"
					]
				},
				"description": "POST请求-HTTP权限验证正确，但userid非法"
			},
			"response": []
		},
		{
			"name": "storm-027",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response Code is 200\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "900.9",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney"
					]
				},
				"description": "POST请求-HTTP权限验证正确，userid正确，money非法"
			},
			"response": []
		},
		{
			"name": "storm-028",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response Code is 405\",function(){\r",
							"    pm.expect(pm.response.status).to.eql( \"Method Not Allowed\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "900.9",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney?userid=1&money=900",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney"
					],
					"query": [
						{
							"key": "userid",
							"value": "1"
						},
						{
							"key": "money",
							"value": "900"
						}
					]
				},
				"description": "GET请求-HTTP权限验证正确,无法修改用户余额"
			},
			"response": []
		},
		{
			"name": "storm-029",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response Code is 200\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "token=token12345",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "900",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1",
							"disabled": true
						},
						{
							"key": "money",
							"value": "900",
							"disabled": true
						}
					]
				},
				"description": "POST请求-成功修改用户余额"
			},
			"response": []
		},
		{
			"name": "storm-030",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is Cookie认证失败\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"cookie认证失败\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"type": "text",
						"value": "token=token12345",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "900",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1",
							"disabled": true
						},
						{
							"key": "money",
							"value": "900",
							"disabled": true
						}
					]
				},
				"description": "POST请求-无Cookies"
			},
			"response": []
		},
		{
			"name": "storm-031",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is Cookie非法\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"cookie非法\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"type": "text",
						"value": "token=token11111"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "900",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1",
							"disabled": true
						},
						{
							"key": "money",
							"value": "900",
							"disabled": true
						}
					]
				},
				"description": "POST请求-无Cookies"
			},
			"response": []
		},
		{
			"name": "storm-032",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response msg is 没有这个用户\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"没有这个用户\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"type": "text",
						"value": "token=token12345"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "2",
							"type": "text"
						},
						{
							"key": "money",
							"value": "900",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1",
							"disabled": true
						},
						{
							"key": "money",
							"value": "900",
							"disabled": true
						}
					]
				},
				"description": "POST请求-无Cookies"
			},
			"response": []
		},
		{
			"name": "storm-033",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code is 200\",function(){\r",
							"    jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"type": "text",
						"value": "token=token12345"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userid",
							"value": "1",
							"type": "text"
						},
						{
							"key": "money",
							"value": "900.9",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/setmoney2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1",
							"disabled": true
						},
						{
							"key": "money",
							"value": "900",
							"disabled": true
						}
					]
				},
				"description": "POST请求-无Cookies"
			},
			"response": []
		},
		{
			"name": "storm-034",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code is 405\",function(){\r",
							"    pm.response.to.have.status(405)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"type": "text",
						"value": "token=token12345"
					}
				],
				"url": {
					"raw": "http://{{domain}}/setmoney2?userid=1&money=900",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"setmoney2"
					],
					"query": [
						{
							"key": "userid",
							"value": "1"
						},
						{
							"key": "money",
							"value": "900"
						}
					]
				},
				"description": "GET请求-无法修改用户余额"
			},
			"response": []
		},
		{
			"name": "storm-035",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//判断响应体code=200\r",
							"pm.test(\"test Response code 200\",function(){\r",
							"    var jsonDta = pm.response.json();\r",
							"    pm.expect(jsonDta.code).to.eql(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123456",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"type": "text",
						"value": "token=token12345",
						"disabled": true
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "multipart/form-data",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/E:/test.txt"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/uploadfile",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"uploadfile"
					]
				},
				"description": "POST请求-上传txt文件"
			},
			"response": []
		}
	]
}